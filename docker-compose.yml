version: '3'
services:
  # SPECKLE
  speckle:
<<<<<<< HEAD
    #image: speckle/speckleserver:dev  # For pre-build image
    # If you are building your own then make sure that you have done this to
    # get the viewer folder populated
    # git submodule update --init --recursive
    build: .
    ports:
      - '80:3000'
    networks:
=======
    image: speckle/speckleserver:latest
    ports:
      - '3000:3000'
    networks: 
>>>>>>> master
      - webnet
    depends_on:
      - redis
      - mongo
    environment:
      - SPECKLE_NAME=My Speckle Server
      - REQ_SIZE=16mb
      - INDENT_RESPONSES=true
      # If connecting to your own databses, uncomment & fill in the details!
      # - MONGO_URI=
      # - REDIS_PORT=
      # - REDIS_ADDR=
    # For development only
    volumes:
      - .:/usr/src/app
    links:
      - redis
      - mongo
  # MONGODB
  mongo:
    image: mongo:latest
    ports:
      - '27017:27017'
    networks:
      - webnet
    volumes:
      #- ./data:/data/db # Linux only
      - dbdata:/data/db  # Use volume below (Linux and Windows support)
    environment:
      - MONGO_INITDB_ROOT_USERNAME=
      - MONGO_INITDB_ROOT_PASSWORD=
      - MONGO_INITDB_DATABASE=
  # REDIS
  redis:
    image: redis:alpine
    ports:
      - '6379:6379'
    networks:
      - webnet
networks:
  webnet:

# Create and mount a volume for persisting data generated by and used by
# docker containers.  This is the preferred mechanism for persisting data.
# Volumes work on both Linux and Windows containers.
# https://docs.docker.com/engine/admin/volumes/volumes/
# Volume can be inspected and backed up with docker volume inspect
# https://docs.docker.com/engine/reference/commandline/volume_inspect/
volumes:
  dbdata:
    driver: local
